,vol.closing.prices = rollvol(ret.closing.prices)
# across(
#   .cols = starts_with('ret.')
#   ,.fns =
#   ,.names = 'vol.{.col}'
# )
) %>%
drop_na(.) %>%
View(.)
rollvol <- function(prices){
sqrt(252)*rollapply(
data = prices
, width = 22
, FUN = sd()
, fill = NA
)
}
rollvol <- function(prices){
sqrt(252)*rollapply(
data = prices
, width = 22
, FUN = sd
, fill = NA
)
}
list.prices$IBOV %>%
group_by(ticker) %>%
arrange(ticker, ref.date) %>%
mutate(
vol.adjusted.prices = rollvol(ret.adjusted.prices)
,vol.closing.prices = rollvol(ret.closing.prices)
# across(
#   .cols = starts_with('ret.')
#   ,.fns =
#   ,.names = 'vol.{.col}'
# )
) %>%
drop_na(.) %>%
View(.)
rollvol <- function(prices){
sqrt(252)*rollapply(
data = prices
, width = 22
, FUN = sd
, fill = NA
)
}
list.prices$IBOV %>%
group_by(ticker) %>%
arrange(ticker, ref.date) %>%
mutate(volatility = rollvol(ret.adjusted.prices)) %>%
drop_na(.) %>%
View(.)
list.prices$IBOV %>%
filter(ticker == 'ITSA4.SA')
list.prices$IBOV %>%
filter(ticker == 'ITSA4.SA') %>% head(24) %>%
group_by(ticker) %>%
arrange(ticker, ref.date) %>%
mutate(volatility = rollvol(ret.adjusted.prices)) %>%
drop_na(.) %>%
View(.)
list.prices$IBOV %>%
filter(ticker == 'ITSA4.SA') %>% head(24) %>%
group_by(ticker) %>%
arrange(ticker, ref.date) %>%
mutate(volatility = rollvol(ret.adjusted.prices)) %>%
drop_na(.) -> lalala
lalala
View(lalala)
list.prices$IBOV %>%
filter(ticker == 'ITSA4.SA') %>% head(24) %>%
group_by(ticker) %>%
arrange(ticker, ref.date) %>%
mutate(volatility = rollvol(ret.adjusted.prices)) %>% View(.)
rollvol <- function(prices){
sqrt(252)*rollapply(
data = prices
, width = 22
, FUN = sd
, fill = NA
, align = 'left'
)
}
list.prices$IBOV %>%
filter(ticker == 'ITSA4.SA') %>% head(24) %>%
group_by(ticker) %>%
arrange(ticker, ref.date) %>%
mutate(volatility = rollvol(ret.adjusted.prices)) %>% View(.)
rollvol <- function(prices){
sqrt(252)*rollapply(
data = prices
, width = 22
, FUN = sd
, fill = NA
, align = 'right'
)
}
list.prices$IBOV %>%
filter(ticker == 'ITSA4.SA') %>% head(24) %>%
group_by(ticker) %>%
arrange(ticker, ref.date) %>%
mutate(volatility = rollvol(ret.adjusted.prices)) %>% View(.)
rollvol <- function(prices){
sqrt(252)*rollapplyr(
data = prices
, width = 22
, FUN = sd
, fill = NA
)
}
list.prices$IBOV %>%
filter(ticker == 'ITSA4.SA') %>% head(22*2) %>%
group_by(ticker) %>%
arrange(ticker, ref.date) %>%
mutate(volatility = rollvol(ret.adjusted.prices)) %>% View(.)
list.prices$IBOV %>%
filter(ticker == 'ITSA4.SA') %>% head(22*2) -> teste
head(teste, 23)
head(teste, 23) %>%
mutate(vol = sd(ret.adjusted.prices))
head(teste, 23) %>%
sd(ret.adjusted.prices)
head(teste, 23) %>%
sd(.$ret.adjusted.prices)
head(teste, 23)$ret.adjusted.prices)
list.prices$IBOV %>%
filter(ticker == 'ITSA4.SA') %>% head(23) -> teste
sd(teste$ret.adjusted.prices)
list.prices$IBOV %>%
filter(ticker == 'ITSA4.SA') %>%
group_by(ticker) %>%
arrange(ticker, ref.date) %>% head(23) -> teste
sd(teste$ret.adjusted.prices)
teste
teste$ret.adjusted.prices
sd(teste$ret.adjusted.prices, na.rm = T)
View(teste)
lalala
lalala$volatility
list.prices$IBOV %>%
filter(ticker == 'ITSA4.SA') %>%
group_by(ticker) %>%
arrange(ticker, ref.date) %>% head(23) %>%
mutate(volatility = rollvol(ret.adjusted.prices)) %>%
select(ticker, ref.date, volatility)
list.prices$IBOV %>%
filter(ticker == 'ITSA4.SA') %>%
group_by(ticker) %>%
arrange(ticker, ref.date) %>% head(23) %>%
mutate(volatility = rollvol(ret.adjusted.prices)) %>%
select(ticker, ref.date, volatility) %>% tail()
teste
teste$ret.adjusted.prices
sd(teste$ret.adjusted.prices %>% drop_na(.))
sd(teste$ret.adjusted.prices, na.rm = T)
rollvol <- function(prices){
sqrt(252)*rollapplyr(
data = prices
, width = 22
, FUN = sd(na.rm = T)
, fill = NA
)
}
list.prices$IBOV %>%
filter(ticker == 'ITSA4.SA') %>%
group_by(ticker) %>%
arrange(ticker, ref.date) %>% head(23) %>%
mutate(volatility = rollvol(ret.adjusted.prices)) %>%
select(ticker, ref.date, volatility) %>% tail()
list.prices$IBOV %>%
filter(ticker == 'ITSA4.SA') %>%
group_by(ticker) %>%
arrange(ticker, ref.date) %>% head(23) %>%
# mutate(volatility = rollvol(ret.adjusted.prices)) %>%
mutate(volatility = sqrt(252)*rollapplyr(
data = ret.adjusted.prices
, width = 22
, FUN = sd(na.rm = T)
, fill = NA
))
rollvol <- function(prices){
sqrt(252)*rollapplyr(
data = prices
, width = 22
, FUN = sd
, na.rm = T
, fill = NA
)
}
list.prices$IBOV %>%
filter(ticker == 'ITSA4.SA') %>%
group_by(ticker) %>%
arrange(ticker, ref.date) %>% head(23) %>%
# mutate(volatility = rollvol(ret.adjusted.prices)) %>%
mutate(volatility = rollvol(ret.adjusted.prices)) %>%
select(ticker, ref.date, volatility) %>% tail()
list.prices$IBOV %>%
filter(ticker == 'ITSA4.SA') %>%
group_by(ticker) %>%
arrange(ticker, ref.date) %>% head(23)
list.prices$IBOV %>%
filter(ticker == 'ITSA4.SA') %>%
group_by(ticker) %>%
arrange(ticker, ref.date) %>% head(23)
list.prices$IBOV %>%
filter(ticker == 'ITSA4.SA') %>%
group_by(ticker) %>%
arrange(ticker, ref.date) %>% head(23) %>%
# mutate(volatility = rollvol(ret.adjusted.prices)) %>%
mutate(volatility = rollvol(ret.adjusted.prices)) %>%
select(ticker, ref.date, volatility) %>% tail()
list.prices$IBOV %>%
filter(ticker == 'ITSA4.SA') %>%
group_by(ticker) %>%
arrange(ticker, ref.date) %>% head(22) %>%
# mutate(volatility = rollvol(ret.adjusted.prices)) %>%
mutate(volatility = rollvol(ret.adjusted.prices)) %>%
select(ticker, ref.date, volatility) %>% tail()
list.prices$IBOV %>%
filter(ticker == 'ITSA4.SA') %>%
group_by(ticker) %>%
arrange(ticker, ref.date) %>% head(22) -> teste
teste$ret.closing.prices
length(teste$ret.closing.prices)
teste$ret.closing.prices %>% sd(na.rm = T)
teste$ret.closing.prices %>% sd(na.rm = T)*sqrt(252)
list.prices$IBOV %>%
filter(ticker == 'ITSA4.SA') %>%
group_by(ticker) %>%
arrange(ticker, ref.date) %>% head(22) %>%
# mutate(volatility = rollvol(ret.adjusted.prices)) %>%
mutate(volatility = rollvol(ret.closing.prices)) %>%
select(ticker, ref.date, volatility) %>% tail()
teste$ret.closing.prices %>% sd(na.rm = T)*sqrt(252)
list.prices$IBOV %>%
filter(ticker %in% c('ITSA4.SA', 'WEGE3.SA')) %>%
group_by(ticker) %>%
arrange(ticker, ref.date) %>% head(22) %>%
mutate(volatility = rollvol(ret.closing.prices)) %>%
select(ticker, ref.date, volatility) %>% tail()
list.prices$IBOV %>%
filter(ticker %in% c('ITSA4.SA', 'WEGE3.SA')) %>%
group_by(ticker) %>%
arrange(ticker, ref.date) %>% head(22) %>%
mutate(volatility = rollvol(ret.closing.prices)) %>%
select(ticker, ref.date, volatility) %>% View()
list.prices$IBOV %>%
filter(ticker %in% c('ITSA4.SA', 'WEGE3.SA')) %>%
group_by(ticker) %>%
arrange(ticker, ref.date) %>% head(44) %>%
mutate(volatility = rollvol(ret.closing.prices)) %>%
select(ticker, ref.date, volatility) %>% View()
list.prices$IBOV %>%
filter(ticker %in% c('ITSA4.SA', 'WEGE3.SA')) %>%
group_by(ticker) %>%
arrange(ticker, ref.date) %>%
mutate(volatility = rollvol(ret.closing.prices)) %>%
select(ticker, ref.date, volatility) %>% View()
list.prices$IBOV %>%
filter(ticker %in% c('ITSA4.SA', 'WEGE3.SA')) %>%
arrange(ticker, ref.date) %>%
group_by(ticker) %>%
mutate(volatility = rollvol(ret.closing.prices)) %>%
select(ticker, ref.date, volatility) %>% View()
list.prices$IBOV %>%
filter(ticker %in% c('ITSA4.SA', 'WEGE3.SA')) %>%
arrange(ref.date) %>%
group_by(ticker) %>%
mutate(volatility = rollvol(ret.closing.prices)) %>%
select(ticker, ref.date, volatility) %>% View()
list.prices$IBOV %>%
filter(ticker %in% c('ITSA4.SA', 'WEGE3.SA', 'PETR4.SA')) %>%
arrange(ref.date) %>%
group_by(ticker) %>%
mutate(volatility = rollvol(ret.closing.prices)) %>%
select(ticker, ref.date, volatility) %>% View()
list.prices$IBOV %>%
filter(ticker %in% c('ITSA4.SA', 'WEGE3.SA', 'PETR4.SA')) %>%
arrange(ref.date) %>%
group_by(ticker) %>%
mutate(volatility = rollvol(ret.closing.prices)) %>%
select(ticker, ref.date, volatility) -> teste
teste %>%
ggplot(
aes(
x = ref.date
, y = volatility
)) +
geom_line(size = 1.2) +
facet_grid(~ ticker)
list.prices$IBOV %>% View()
list.prices$IBOV %>%
filter(ticker %in% c('ITSA4.SA', 'ELET6.SA', 'PETR4.SA')) %>%
arrange(ref.date) %>%
group_by(ticker) %>%
mutate(volatility = rollvol(ret.closing.prices)) %>%
select(ticker, ref.date, volatility) -> teste
teste %>%
ggplot(
aes(
x = ref.date
, y = volatility
)) +
geom_line(size = 1.2) +
facet_grid(~ ticker)
list.prices$IBOV %>% pull(ticker) %>% unique()
list.prices$IBOV %>%
filter(ticker %in% c('MULT3.SA', 'ELET6.SA', 'TIMS3.SA', 'HAPV3.SA')) %>%
arrange(ref.date) %>%
group_by(ticker) %>%
mutate(volatility = rollvol(ret.closing.prices)) %>%
select(ticker, ref.date, volatility) -> teste
teste %>%
ggplot(
aes(
x = ref.date
, y = volatility
)) +
geom_line(size = 1.2) +
facet_wrap(facets = vars(ticker)
, ncol = 2) +
ggthemes::theme_economist()
teste %>%
ggplot(
aes(
x = ref.date
, y = volatility
, color = ticker
)) +
geom_line(size = 1.2) +
ggthemes::theme_economist()
lapply(
list.prices
, function(stocks){
stocks %>%
arrange(ref.date) %>%
group_by(ticker) %>%
mutate(volatility = rollvol(ret.closing.prices))
}) %>% glimpse(.)
, function(stocks){
stocks %>%
arrange(ref.date) %>%
group_by(ticker) %>%
mutate(volatility = rollvol(ret.closing.prices))
}) -> lalala
lapply(
list.prices
, function(stocks){
stocks %>%
arrange(ref.date) %>%
group_by(ticker) %>%
mutate(volatility = rollvol(ret.closing.prices))
}) -> lalala
lalala$IBOV
lalala$IBOV$volatility
lalala$IBOV %>% View(.)
sd(c(0.0167505208, -0.0214168048, -0.0117845390, NA), na.rm = T)
sd(c(0.0167505208, -0.0214168048, -0.0117845390, NA), na.rm = T)*sqrt(252)
Sys.Date() - months(6) - 22
Sys.Date() - months(6)
list.risk.free
# Taxa de juro livre de risco brasileira (SELIC)
GetBCBData::gbcbd_get_series(
id = c('SELIC_ANO' = 1178)
# Código 1178 = SELIC anualizada (apenas 11, não anualizada).
# Para mais séries, ver "http://www.bcb.gov.br/?sgs".
, first.date = DATA.inicial_2
, last.date = DATA.final
, format.data = 'wide'
) %>%
as_tibble(.) %>%
fill(
SELIC_ANO,
.direction = 'downup'
) %>%
mutate(
SELIC_ANO = SELIC_ANO/100
) -> risk.free.BRA
risk.free.BRA
# Taxa de juro livre de risco americana (US T-Bill 3M, ao ano)
quantmod::getSymbols(Symbols = 'DGS3MO', src = 'FRED')
DGS3MO %>%
as_tibble(rownames = 'ref.date') %>%
mutate(ref.date = as_date(ref.date)) %>%
filter(
ref.date >= DATA.inicial_2
, ref.date <= DATA.final
) %>%
fill(
DGS3MO,
.direction = 'downup'
) -> risk.free.USA
risk.free.USA
# Taxa de juro livre de risco inglesa (LIBOR 3M, ao ano)
quantmod::getSymbols(Symbols = 'GBP3MTD156N', src = 'FRED')
GBP3MTD156N %>%
as_tibble(rownames = 'ref.date') %>%
mutate(ref.date = as_date(ref.date)) %>%
filter(
ref.date >= DATA.inicial_2
, ref.date <= DATA.final
) %>%
fill(
GBP3MTD156N,
.direction = 'downup'
) -> risk.free.GBR
risk.free.GBR
list(
'IBOV' = risk.free.BRA
, 'SP500' = risk.free.USA
, 'FTSE100' = risk.free.GBR
) -> list.risk.free
list.risk.free
rollvol <- function(prices, window = 22, anual = T){
rollapplyr(
data = prices
, width = window
, FUN = sd
, na.rm = T
, fill = NA
) -> vol
if(anual){vol <- sqrt(252)}
return(vol)
}
rollvol <- function(
prices
, window = 22
, anual = T
){
rollapplyr(
data = prices
, width = window
, FUN = sd
, na.rm = T
, fill = NA
) -> vol
if(anual){vol <- sqrt(252)}
return(vol)
}
rollvol <- function(
prices
, window = 22
, anual = T
){
rollapplyr(
data = prices
, width = window
, FUN = sd
, na.rm = T
, fill = NA
) -> vol
if(anual){vol <- sqrt(252)}
return(vol)
}
rollvol <- function(
stock.returns
, window = 22
, anual = T
){
rollapplyr(
data = prices
, width = window
, FUN = sd
, na.rm = T
, fill = NA
) -> vol
if(anual){vol <- sqrt(252)}
return(vol)
}
rollvol <- function(
stock.returns
, window = 22
, anual = T
){
rollapplyr(
data = stock.returns
, width = window
, FUN = sd
, na.rm = T
, fill = NA
) -> vol
if(anual){vol <- sqrt(252)}
return(vol)
}
rollvol <- function(
stock.returns
, window = 22
, anual = T
){
rollapplyr(
data = stock.returns
, width = window
, FUN = sd
, na.rm = T
, fill = NA
) -> vol
if(anual){vol <- vol*sqrt(252)}
return(vol)
}
list.prices %>%
arrange(ref.date) %>%
group_by(ticker) %>%
mutate(volatility = rollvol(ret.closing.prices)) %>%
select(ticker, ref.date, volatility) -> teste
list.prices$IBOV %>%
arrange(ref.date) %>%
group_by(ticker) %>%
mutate(volatility = rollvol(ret.closing.prices)) %>%
select(ticker, ref.date, volatility) -> teste
View(teste %>% filter(ticker = 'ITSA4.SA'))
View(teste %>% filter(ticker == 'ITSA4.SA'))
